// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tradingrpc.proto

package tradingrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataResponse struct {
	//success:1
	StatusCode           int32    `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=Msg,proto3" json:"Msg,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,4,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataResponse) Reset()         { *m = DataResponse{} }
func (m *DataResponse) String() string { return proto.CompactTextString(m) }
func (*DataResponse) ProtoMessage()    {}
func (*DataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d22a39b166d55a9c, []int{0}
}

func (m *DataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataResponse.Unmarshal(m, b)
}
func (m *DataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataResponse.Marshal(b, m, deterministic)
}
func (m *DataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataResponse.Merge(m, src)
}
func (m *DataResponse) XXX_Size() int {
	return xxx_messageInfo_DataResponse.Size(m)
}
func (m *DataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataResponse proto.InternalMessageInfo

func (m *DataResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *DataResponse) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DataResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *DataResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

type DataRequest struct {
	Parameters           map[string]string `protobuf:"bytes,1,rep,name=Parameters,proto3" json:"Parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DataRequest) Reset()         { *m = DataRequest{} }
func (m *DataRequest) String() string { return proto.CompactTextString(m) }
func (*DataRequest) ProtoMessage()    {}
func (*DataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d22a39b166d55a9c, []int{1}
}

func (m *DataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRequest.Unmarshal(m, b)
}
func (m *DataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRequest.Marshal(b, m, deterministic)
}
func (m *DataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRequest.Merge(m, src)
}
func (m *DataRequest) XXX_Size() int {
	return xxx_messageInfo_DataRequest.Size(m)
}
func (m *DataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataRequest proto.InternalMessageInfo

func (m *DataRequest) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type Kline struct {
	Id                   int32    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Open                 float32  `protobuf:"fixed32,3,opt,name=Open,proto3" json:"Open,omitempty"`
	Close                float32  `protobuf:"fixed32,4,opt,name=Close,proto3" json:"Close,omitempty"`
	High                 float32  `protobuf:"fixed32,5,opt,name=High,proto3" json:"High,omitempty"`
	Low                  float32  `protobuf:"fixed32,6,opt,name=Low,proto3" json:"Low,omitempty"`
	Amount               float32  `protobuf:"fixed32,7,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Count                float32  `protobuf:"fixed32,8,opt,name=Count,proto3" json:"Count,omitempty"`
	Volume               float32  `protobuf:"fixed32,9,opt,name=Volume,proto3" json:"Volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Kline) Reset()         { *m = Kline{} }
func (m *Kline) String() string { return proto.CompactTextString(m) }
func (*Kline) ProtoMessage()    {}
func (*Kline) Descriptor() ([]byte, []int) {
	return fileDescriptor_d22a39b166d55a9c, []int{2}
}

func (m *Kline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kline.Unmarshal(m, b)
}
func (m *Kline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kline.Marshal(b, m, deterministic)
}
func (m *Kline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kline.Merge(m, src)
}
func (m *Kline) XXX_Size() int {
	return xxx_messageInfo_Kline.Size(m)
}
func (m *Kline) XXX_DiscardUnknown() {
	xxx_messageInfo_Kline.DiscardUnknown(m)
}

var xxx_messageInfo_Kline proto.InternalMessageInfo

func (m *Kline) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Kline) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Kline) GetOpen() float32 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Kline) GetClose() float32 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Kline) GetHigh() float32 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Kline) GetLow() float32 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Kline) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Kline) GetCount() float32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Kline) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

type Klines struct {
	Result               bool     `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Data                 []*Kline `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Klines) Reset()         { *m = Klines{} }
func (m *Klines) String() string { return proto.CompactTextString(m) }
func (*Klines) ProtoMessage()    {}
func (*Klines) Descriptor() ([]byte, []int) {
	return fileDescriptor_d22a39b166d55a9c, []int{3}
}

func (m *Klines) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Klines.Unmarshal(m, b)
}
func (m *Klines) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Klines.Marshal(b, m, deterministic)
}
func (m *Klines) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Klines.Merge(m, src)
}
func (m *Klines) XXX_Size() int {
	return xxx_messageInfo_Klines.Size(m)
}
func (m *Klines) XXX_DiscardUnknown() {
	xxx_messageInfo_Klines.DiscardUnknown(m)
}

var xxx_messageInfo_Klines proto.InternalMessageInfo

func (m *Klines) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *Klines) GetData() []*Kline {
	if m != nil {
		return m.Data
	}
	return nil
}

type History struct {
	Id                   int32    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Price                float32  `protobuf:"fixed32,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Amount               float32  `protobuf:"fixed32,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Direction            bool     `protobuf:"varint,5,opt,name=Direction,proto3" json:"Direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *History) Reset()         { *m = History{} }
func (m *History) String() string { return proto.CompactTextString(m) }
func (*History) ProtoMessage()    {}
func (*History) Descriptor() ([]byte, []int) {
	return fileDescriptor_d22a39b166d55a9c, []int{4}
}

func (m *History) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_History.Unmarshal(m, b)
}
func (m *History) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_History.Marshal(b, m, deterministic)
}
func (m *History) XXX_Merge(src proto.Message) {
	xxx_messageInfo_History.Merge(m, src)
}
func (m *History) XXX_Size() int {
	return xxx_messageInfo_History.Size(m)
}
func (m *History) XXX_DiscardUnknown() {
	xxx_messageInfo_History.DiscardUnknown(m)
}

var xxx_messageInfo_History proto.InternalMessageInfo

func (m *History) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *History) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *History) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *History) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *History) GetDirection() bool {
	if m != nil {
		return m.Direction
	}
	return false
}

type Historys struct {
	Result               bool       `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Data                 []*History `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Historys) Reset()         { *m = Historys{} }
func (m *Historys) String() string { return proto.CompactTextString(m) }
func (*Historys) ProtoMessage()    {}
func (*Historys) Descriptor() ([]byte, []int) {
	return fileDescriptor_d22a39b166d55a9c, []int{5}
}

func (m *Historys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Historys.Unmarshal(m, b)
}
func (m *Historys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Historys.Marshal(b, m, deterministic)
}
func (m *Historys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Historys.Merge(m, src)
}
func (m *Historys) XXX_Size() int {
	return xxx_messageInfo_Historys.Size(m)
}
func (m *Historys) XXX_DiscardUnknown() {
	xxx_messageInfo_Historys.DiscardUnknown(m)
}

var xxx_messageInfo_Historys proto.InternalMessageInfo

func (m *Historys) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *Historys) GetData() []*History {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*DataResponse)(nil), "DataResponse")
	proto.RegisterType((*DataRequest)(nil), "DataRequest")
	proto.RegisterMapType((map[string]string)(nil), "DataRequest.ParametersEntry")
	proto.RegisterType((*Kline)(nil), "Kline")
	proto.RegisterType((*Klines)(nil), "Klines")
	proto.RegisterType((*History)(nil), "History")
	proto.RegisterType((*Historys)(nil), "Historys")
}

func init() {
	proto.RegisterFile("tradingrpc.proto", fileDescriptor_d22a39b166d55a9c)
}

var fileDescriptor_d22a39b166d55a9c = []byte{
	// 457 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x52, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0x25, 0xd9, 0xdd, 0x6c, 0xf6, 0xb6, 0x6a, 0x19, 0x8a, 0xc4, 0x65, 0x11, 0xc9, 0x83, 0xf4,
	0x69, 0x0a, 0xd5, 0x07, 0x91, 0x0a, 0x96, 0xb6, 0x50, 0x51, 0xb1, 0x4c, 0xc5, 0xf7, 0x74, 0xf7,
	0x1a, 0x83, 0xd9, 0x99, 0x38, 0x1f, 0x95, 0xfd, 0x03, 0x3e, 0xf8, 0x9f, 0xfc, 0x6f, 0xce, 0xdc,
	0xc9, 0xda, 0x54, 0x10, 0xdf, 0xee, 0x39, 0x73, 0x72, 0x73, 0xce, 0xbd, 0x17, 0xf6, 0xac, 0xae,
	0x56, 0x8d, 0xac, 0x75, 0xb7, 0xe4, 0x9d, 0x56, 0x56, 0xcd, 0x1f, 0xd5, 0x4a, 0xd5, 0x2d, 0x1e,
	0x12, 0xba, 0x76, 0x9f, 0x0f, 0x2b, 0xb9, 0x89, 0x4f, 0xe5, 0x8f, 0x04, 0x76, 0xcf, 0x2a, 0x5b,
	0x09, 0x34, 0x9d, 0x92, 0x06, 0xd9, 0x63, 0x80, 0x2b, 0x5b, 0x59, 0x67, 0x4e, 0xd5, 0x0a, 0x8b,
	0xe4, 0x49, 0x72, 0x30, 0x11, 0x03, 0x86, 0x1d, 0xc0, 0x38, 0xe8, 0x8b, 0xd4, 0xbf, 0xec, 0x1c,
	0xed, 0xf3, 0xd8, 0x9a, 0x6f, 0x5b, 0xf3, 0x13, 0xb9, 0x11, 0xa4, 0x60, 0x7b, 0x30, 0x7a, 0x6f,
	0xea, 0x62, 0xe4, 0x85, 0x33, 0x11, 0x4a, 0x36, 0x87, 0xfc, 0x5c, 0x6b, 0xa5, 0x03, 0x3d, 0x26,
	0xfa, 0x0f, 0x2e, 0x7f, 0x26, 0xb0, 0x13, 0x8d, 0x7c, 0x73, 0x68, 0x2c, 0x3b, 0x06, 0xb8, 0xac,
	0x74, 0xb5, 0x46, 0x8b, 0xda, 0x78, 0x1f, 0x23, 0xff, 0xb7, 0x05, 0x1f, 0x28, 0xf8, 0xed, 0xf3,
	0xb9, 0xb4, 0x7a, 0x23, 0x06, 0xfa, 0xf9, 0x2b, 0x78, 0xf0, 0xd7, 0x73, 0xb0, 0xf3, 0x15, 0x37,
	0x94, 0xc8, 0xdb, 0xf1, 0x25, 0xdb, 0x87, 0xc9, 0x4d, 0xd5, 0x3a, 0xa4, 0x2c, 0x33, 0x11, 0xc1,
	0xcb, 0xf4, 0x45, 0x52, 0xfe, 0x4a, 0x60, 0xf2, 0xb6, 0x6d, 0x24, 0xb2, 0xfb, 0x90, 0xbe, 0x59,
	0xf5, 0x63, 0xf0, 0x55, 0xc0, 0x1f, 0x0d, 0x7d, 0x30, 0x12, 0xbe, 0x62, 0x0c, 0xc6, 0x1f, 0x3a,
	0x94, 0x94, 0x32, 0x15, 0x54, 0x87, 0xbe, 0xa7, 0xad, 0x32, 0x48, 0x19, 0x53, 0x11, 0x41, 0x50,
	0x5e, 0x34, 0xf5, 0x97, 0x62, 0x12, 0x95, 0xa1, 0x0e, 0x9e, 0xde, 0xa9, 0xef, 0x45, 0x46, 0x54,
	0x28, 0xd9, 0x43, 0xc8, 0x4e, 0xd6, 0xca, 0x49, 0x5b, 0x4c, 0x89, 0xec, 0x11, 0xf5, 0x24, 0x3a,
	0xef, 0x7b, 0x12, 0xeb, 0xd5, 0x9f, 0x54, 0xeb, 0xd6, 0x58, 0xcc, 0xa2, 0x3a, 0xa2, 0xf2, 0x18,
	0x32, 0xb2, 0x6f, 0x82, 0xc2, 0xaf, 0xd6, 0xb5, 0x96, 0x32, 0xe4, 0xa2, 0x47, 0x7e, 0x15, 0xdb,
	0x35, 0x86, 0xc1, 0x66, 0x9c, 0xe4, 0x71, 0x71, 0xa5, 0x83, 0xe9, 0x45, 0x63, 0xac, 0xf2, 0x43,
	0xfb, 0x5f, 0x7c, 0x6f, 0xeb, 0x52, 0x37, 0x4b, 0xec, 0xf3, 0x47, 0x30, 0x08, 0x31, 0xbe, 0x13,
	0x62, 0x01, 0xb3, 0xb3, 0x46, 0xe3, 0xd2, 0x36, 0x4a, 0xd2, 0x1c, 0x72, 0x71, 0x4b, 0x94, 0xaf,
	0x21, 0xef, 0x7f, 0xfb, 0x6f, 0xdb, 0x8b, 0x3b, 0xb6, 0x73, 0xde, 0x7f, 0x10, 0x8d, 0x1f, 0x3d,
	0x07, 0x10, 0xdd, 0xf2, 0x0a, 0xf5, 0x4d, 0x70, 0xf1, 0x14, 0xa6, 0xdb, 0x63, 0xda, 0x1d, 0x1e,
	0xce, 0xfc, 0x1e, 0x1f, 0x5e, 0xfc, 0x75, 0x46, 0xb7, 0xfb, 0xec, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xfd, 0xda, 0xab, 0xf1, 0x38, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RpcServiceClient is the client API for RpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcServiceClient interface {
	Request(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DataResponse, error)
}

type rpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRpcServiceClient(cc grpc.ClientConnInterface) RpcServiceClient {
	return &rpcServiceClient{cc}
}

func (c *rpcServiceClient) Request(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DataResponse, error) {
	out := new(DataResponse)
	err := c.cc.Invoke(ctx, "/RpcService/Request", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcServiceServer is the server API for RpcService service.
type RpcServiceServer interface {
	Request(context.Context, *DataRequest) (*DataResponse, error)
}

// UnimplementedRpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRpcServiceServer struct {
}

func (*UnimplementedRpcServiceServer) Request(ctx context.Context, req *DataRequest) (*DataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Request not implemented")
}

func RegisterRpcServiceServer(s *grpc.Server, srv RpcServiceServer) {
	s.RegisterService(&_RpcService_serviceDesc, srv)
}

func _RpcService_Request_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).Request(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RpcService/Request",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).Request(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RpcService",
	HandlerType: (*RpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Request",
			Handler:    _RpcService_Request_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tradingrpc.proto",
}
